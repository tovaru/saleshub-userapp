{"ast":null,"code":"import \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.function.name.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport UserDataService from \"../services/UserDataService\";\nexport default {\n  name: \"users-list\",\n  data: function data() {\n    return {\n      users: [],\n      name: \"\",\n      headers: [{\n        text: \"Name\",\n        align: \"start\",\n        sortable: false,\n        value: \"name\"\n      }, //{ text: \"Id\", value: \"id\", sortable: false },\n      {\n        text: \"E-mail\",\n        value: \"email\",\n        sortable: false\n      }, // { text: \"Password\", value: \"password\", sortable: false },\n      {\n        text: \"Role\",\n        value: \"role\",\n        sortable: false\n      }, {\n        text: \"Actions\",\n        value: \"actions\",\n        sortable: false\n      }]\n    };\n  },\n  methods: {\n    retrieveUsers: function retrieveUsers() {\n      var _this = this;\n\n      UserDataService.getAll().then(function (response) {\n        _this.users = response.data.map(_this.getDisplayUser);\n        console.log(response.data);\n      }).catch(function (e) {\n        console.log(e);\n        alert(response.data.message);\n      });\n    },\n    refreshList: function refreshList() {\n      this.retrieveUsers();\n    },\n    removeAllUsers: function removeAllUsers() {\n      var _this2 = this;\n\n      UserDataService.deleteAll().then(function (response) {\n        console.log(response.data);\n\n        _this2.refreshList();\n      }).catch(function (e) {\n        console.log(e);\n        alert(response.data.message);\n      });\n    },\n    searchName: function searchName() {\n      var _this3 = this;\n\n      UserDataService.findByName(this.name).then(function (response) {\n        _this3.users = response.data.map(_this3.getDisplayUser);\n        console.log(response.data);\n      }).catch(function (e) {\n        console.log(e);\n        alert(response.data.message);\n      });\n    },\n    editUser: function editUser(id) {\n      this.$router.push({\n        name: \"userDetails\",\n        params: {\n          id: id\n        }\n      });\n    },\n    deleteUser: function deleteUser(id) {\n      var _this4 = this;\n\n      UserDataService.delete(id).then(function () {\n        _this4.refreshList();\n      }).catch(function (e) {\n        console.log(e);\n        alert(response.data.message);\n      });\n    },\n    getDisplayUser: function getDisplayUser(user) {\n      return {\n        id: user.id,\n        name: user.name.length > 30 ? user.name.substr(0, 30) + \"...\" : user.name,\n        email: user.email.length > 30 ? user.email.substr(0, 30) + \"...\" : user.email,\n        role: user.role.length > 30 ? user.role.substr(0, 30) + \"...\" : user.role\n      };\n    }\n  },\n  mounted: function mounted() {\n    this.retrieveUsers();\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;AACA;EACAA,kBADA;EAEAC,IAFA,kBAEA;IACA;MACAC,SADA;MAEAF,QAFA;MAGAG,UACA;QAAAC;QAAAC;QAAAC;QAAAC;MAAA,CADA,EAEA;MACA;QAAAH;QAAAG;QAAAD;MAAA,CAHA,EAIA;MACA;QAAAF;QAAAG;QAAAD;MAAA,CALA,EAMA;QAAAF;QAAAG;QAAAD;MAAA,CANA;IAHA;EAYA,CAfA;EAgBAE;IACAC,aADA,2BACA;MAAA;;MACAC,yBACAC,IADA,CACA;QACA;QACAC;MACA,CAJA,EAKAC,KALA,CAKA;QACAD;QACAE;MACA,CARA;IASA,CAXA;IAYAC,WAZA,yBAYA;MACA;IACA,CAdA;IAeAC,cAfA,4BAeA;MAAA;;MACAN,4BACAC,IADA,CACA;QACAC;;QACA;MACA,CAJA,EAKAC,KALA,CAKA;QACAD;QACAE;MACA,CARA;IASA,CAzBA;IA0BAG,UA1BA,wBA0BA;MAAA;;MACAP,sCACAC,IADA,CACA;QACA;QACAC;MACA,CAJA,EAKAC,KALA,CAKA;QACAD;QACAE;MACA,CARA;IASA,CApCA;IAqCAI,QArCA,oBAqCAC,EArCA,EAqCA;MACA;QAAAnB;QAAAoB;UAAAD;QAAA;MAAA;IACA,CAvCA;IAwCAE,UAxCA,sBAwCAF,EAxCA,EAwCA;MAAA;;MACAT,2BACAC,IADA,CACA;QACA;MACA,CAHA,EAIAE,KAJA,CAIA;QACAD;QACAE;MACA,CAPA;IAQA,CAjDA;IAkDAQ,cAlDA,0BAkDAC,IAlDA,EAkDA;MACA;QACAJ,WADA;QAEAnB,yEAFA;QAGAwB,6EAHA;QAIAC;MAJA;IAMA;EAzDA,CAhBA;EA2EAC,OA3EA,qBA2EA;IACA;EACA;AA7EA","names":["name","data","users","headers","text","align","sortable","value","methods","retrieveUsers","UserDataService","then","console","catch","alert","refreshList","removeAllUsers","searchName","editUser","id","params","deleteUser","getDisplayUser","user","email","role","mounted"],"sourceRoot":"src/components","sources":["UserDashboard.vue"],"sourcesContent":["<template>\n  <v-row align=\"center\" class=\"list px-3 mx-auto\">\n    <v-col cols=\"12\" md=\"8\">\n      <v-text-field v-model=\"title\" label=\"Search by Name\"></v-text-field>\n    </v-col>\n    <v-col cols=\"12\" md=\"4\">\n      <v-btn small @click=\"searchTitle\">\n        Search\n      </v-btn>\n    </v-col>\n    <v-col cols=\"12\" sm=\"12\">\n      <v-card class=\"mx-auto\" tile>\n        <v-card-title>Users</v-card-title>\n        <v-data-table\n          :headers=\"headers\"\n          :items=\"users\"\n          disable-pagination\n          :hide-default-footer=\"true\"\n        >\n          <template v-slot:[`item.actions`]=\"{ item }\">\n            <v-icon small class=\"mr-2\" @click=\"editUser(item.id)\">mdi-pencil</v-icon>\n            <v-icon small @click=\"deleteUser(item.id)\">mdi-delete</v-icon>\n          </template>\n        </v-data-table>\n        <v-card-actions v-if=\"users.length > 0\">\n          <v-btn small color=\"error\" @click=\"removeAllUsers\">\n            Remove All\n          </v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-col>\n  </v-row>\n</template>\n\n<script>\nimport UserDataService from \"../services/UserDataService\";\nexport default {\n  name: \"users-list\",\n  data() {\n    return {\n      users: [],\n      name: \"\",\n      headers: [\n        { text: \"Name\", align: \"start\", sortable: false, value: \"name\" },\n        //{ text: \"Id\", value: \"id\", sortable: false },\n        { text: \"E-mail\", value: \"email\", sortable: false },\n        // { text: \"Password\", value: \"password\", sortable: false },\n        { text: \"Role\", value: \"role\", sortable: false },\n        { text: \"Actions\", value: \"actions\", sortable: false },\n      ],\n    };\n  },\n  methods: {\n    retrieveUsers() {\n      UserDataService.getAll()\n        .then((response) => {\n          this.users = response.data.map(this.getDisplayUser);\n          console.log(response.data);\n        })\n        .catch((e) => {\n          console.log(e);\n          alert(response.data.message);\n        });\n    },\n    refreshList() {\n      this.retrieveUsers();\n    },\n    removeAllUsers() {\n      UserDataService.deleteAll()\n        .then((response) => {\n          console.log(response.data);\n          this.refreshList();\n        })\n        .catch((e) => {\n          console.log(e);\n          alert(response.data.message);\n        });\n    },\n    searchName() {\n      UserDataService.findByName(this.name)\n        .then((response) => {\n          this.users = response.data.map(this.getDisplayUser);\n          console.log(response.data);\n        })\n        .catch((e) => {\n          console.log(e);\n          alert(response.data.message);\n        });\n    },\n    editUser(id) {\n      this.$router.push({ name: \"userDetails\", params: { id: id } });\n    },\n    deleteUser(id) {\n      UserDataService.delete(id)\n        .then(() => {\n          this.refreshList();\n        })\n        .catch((e) => {\n          console.log(e);\n          alert(response.data.message);\n        });\n    },\n    getDisplayUser(user) {\n      return {\n        id: user.id,\n        name: user.name.length > 30 ? user.name.substr(0, 30) + \"...\" : user.name,\n        email: user.email.length > 30 ? user.email.substr(0, 30) + \"...\" : user.email,\n        role: user.role.length > 30 ? user.role.substr(0, 30) + \"...\" : user.role,\n      };\n    },\n  },\n  mounted() {\n    this.retrieveUsers();\n  },\n};\n</script>\n<style>\n.list {\n  max-width: 750px;\n}\n</style>"]},"metadata":{},"sourceType":"module"}